{"version":3,"sources":["components/Layout/Layout.module.css","components/Layout/Layout.js","redux/actions/contactsActions.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Notification/Notification.js","components/Contacts/Contacts.js","components/App/App.js","redux/reducers/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Layout","children","className","styles","layout","addContacts","createAction","searchFilter","contactsDelete","getContactsFormLs","ContactsForm","state","name","number","onHendleChange","e","target","value","setState","onHendleSubmite","preventDefault","props","contacts","some","contact","openModal","onAddContacts","id","uuidv4","this","onSubmit","type","onChange","Component","mapDispatchToProps","connect","ContactsListItem","hendleClick","onClick","filter","item","toLowerCase","includes","onHandleClick","TransitionGroup","component","map","CSSTransition","timeout","classNames","unmountOnExit","dispatch","searchFilterValue","Notification","Contacts","isOpenModal","hendleIsOpenModal","setTimeout","localStorage","getItem","localStorageData","JSON","parse","getParseContacts","in","appear","length","App","contactsReducer","createReducer","action","getContacts","payload","parseContacts","setItem","stringify","newLocalStorageData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55f73c44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2GhTw\"};","import React from \"react\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.layout}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContacts = createAction('contacts/addContacts');\r\n\r\nconst searchFilter = createAction('contacts/filterContacts');\r\n\r\nconst contactsDelete = createAction('contacts/deleteContacts');\r\n\r\nconst getContactsFormLs = createAction('contacts/getContacts');\r\n\r\nexport { addContacts, searchFilter, contactsDelete, getContactsFormLs };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContacts } from '../../redux/actions/contactsActions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactsForm.css';\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onHendleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHendleSubmite = e => {\r\n    e.preventDefault();\r\n    const { contacts } = this.props;\r\n\r\n    const availableContact = contacts.some(\r\n      contact => contact.name === this.state.name,\r\n    );\r\n\r\n    if (availableContact) {\r\n      this.props.openModal();\r\n      return this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    this.props.onAddContacts({ ...this.state, id: uuidv4() });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"form-styles\" onSubmit={this.onHendleSubmite}>\r\n        <label className=\"label-form\">\r\n          Name\r\n          <input\r\n            className=\"input-form\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.onHendleChange}\r\n          />\r\n        </label>\r\n        <label className=\"label-form\">\r\n          Number\r\n          <input\r\n            className=\"input-form\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.onHendleChange}\r\n          />\r\n        </label>\r\n        <button className=\"button-form\" type=\"submit\">\r\n          Add contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contact.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContacts: addContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);\r\n","import React from 'react';\r\nimport './ContactsList.css';\r\n\r\nconst ContactsListItem = ({ contact, hendleClick }) => {\r\n  return (\r\n    <li className=\"contacts-list-item\" key={contact.id}>\r\n      <div className=\"contacts-list-info\">\r\n        <p className=\"contacts-list-name\">\r\n          {contact.name}\r\n          <span className=\"contacts-list-number\">{contact.number}</span>\r\n        </p>\r\n        <button\r\n          className=\"contacts-list-button\"\r\n          id={contact.id}\r\n          onClick={hendleClick}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsDelete } from '../../redux/actions/contactsActions';\r\nimport ContactsListItem from './ContactsListItem';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './ContactsList.css';\r\nimport './Transition/contactListTransition.css';\r\n\r\nconst ContactsList = ({ contacts, contactsDelete }) => {\r\n  const onHandleClick = e => {\r\n    contactsDelete(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contacts-list\">\r\n      {contacts.map(contact => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames=\"contscts-list-transition\"\r\n          unmountOnExit\r\n        >\r\n          <ContactsListItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            hendleClick={onHandleClick}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contact.contacts.filter(item =>\r\n      item.name.toLowerCase().includes(state.contact.filter),\r\n    ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { contactsDelete })(ContactsList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchFilter } from '../../redux/actions/contactsActions';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ filter, searchFilterValue }) => {\r\n  const onHendleFilter = e => {\r\n    searchFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"conteiner-filter\">\r\n      <label className=\"label-filter\">\r\n        <input\r\n          className=\"input-filter\"\r\n          type=\"text\"\r\n          onChange={onHendleFilter}\r\n          value={filter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.contact.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    searchFilterValue: value => {\r\n      dispatch(searchFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport './Notification.css';\r\n\r\nconst Notification = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"Notification\">Contact already exists!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactsForm from '../ContactsForm/ContactsForm';\r\nimport ContactsList from '../ContactsList/ContactsList';\r\nimport Filter from '../Filter/Filter';\r\nimport Notification from '../Notification/Notification';\r\nimport { getContactsFormLs } from '../../redux/actions/contactsActions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../ContactsForm/Transition/ContactsFormTransition.css';\r\nimport './Contacts.css';\r\nimport './Transition/ContactsTransition.css';\r\nimport '../Filter/Transition/Filter-transition.css';\r\nimport '../Notification/Transition/notificationTransition.css';\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    isOpenModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getLocalstoreg = localStorage.getItem('contacts');\r\n\r\n    if (getLocalstoreg) {\r\n      const localStorageData = JSON.parse(localStorage.getItem('contacts'));\r\n      this.props.getParseContacts(localStorageData);\r\n    }\r\n  }\r\n\r\n  hendleIsOpenModal = () => {\r\n    this.setState({ isOpenModal: true });\r\n    setTimeout(() => {\r\n      this.setState({ isOpenModal: false });\r\n    }, 3000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames=\"title-transition\"\r\n          unmountOnExit\r\n        >\r\n          <h1 className=\"contacts-title\">Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={this.state.isOpenModal}\r\n          timeout={500}\r\n          classNames=\"notification-transition\"\r\n          unmountOnExit\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames=\"contacts-form\"\r\n          unmountOnExit\r\n        >\r\n          <ContactsForm openModal={this.hendleIsOpenModal} />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames=\"transition-filter\"\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <ContactsList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contact.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getParseContacts: getContactsFormLs,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\nimport Layout from '../Layout/Layout';\nimport Contacts from '../Contacts/Contacts';\n\nconst App = () => {\n  return (\n    <Layout>\n      <Contacts />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContacts,\r\n  searchFilter,\r\n  contactsDelete,\r\n  getContactsFormLs,\r\n} from '../actions/contactsActions';\r\n\r\nconst initialeState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nconst addContactsReducer = (state, action) => {\r\n  const getContacts = localStorage.getItem('contacts');\r\n\r\n  const contact = action.payload;\r\n\r\n  if (!getContacts) {\r\n    localStorage.setItem('contacts', JSON.stringify([contact]));\r\n  } else {\r\n    const parseContacts = JSON.parse(getContacts);\r\n    localStorage.setItem(\r\n      'contacts',\r\n      JSON.stringify([contact, ...parseContacts]),\r\n    );\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    contacts: [...state.contacts, action.payload],\r\n  };\r\n};\r\n\r\nconst getContactsFormLsReduser = (state, action) => ({\r\n  ...state,\r\n  contacts: action.payload,\r\n});\r\n\r\nconst deleteContactsReducer = (state, action) => {\r\n  const localStorageData = JSON.parse(localStorage.getItem('contacts'));\r\n  const newLocalStorageData = localStorageData.filter(\r\n    contact => contact.id !== action.payload,\r\n  );\r\n  localStorage.setItem('contacts', JSON.stringify(newLocalStorageData));\r\n  return {\r\n    ...state,\r\n    contacts: [\r\n      ...state.contacts.filter(contact => contact.id !== action.payload),\r\n    ],\r\n  };\r\n};\r\n\r\nconst searchContactsReducer = (state, action) => ({\r\n  ...state,\r\n  filter: action.payload,\r\n});\r\n\r\nexport const contactsReducer = createReducer(\r\n  { ...initialeState },\r\n  {\r\n    [addContacts]: addContactsReducer,\r\n    [contactsDelete]: deleteContactsReducer,\r\n    [searchFilter]: searchContactsReducer,\r\n    [getContactsFormLs]: getContactsFormLsReduser,\r\n  },\r\n);\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './reducers/contactsReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contact: contactsReducer,\r\n  },\r\n});\r\n","import ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}